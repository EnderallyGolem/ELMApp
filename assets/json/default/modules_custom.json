{
    "test_event": {
        "enabled": true,
        "display_text": "Test Event",
        "icon": "misc_sun",
        "inputs": {
            "#Note1": "You can reference other inputs or variables here with '!'. Variables here will only be updated once however!",
            "#Note2": "the aliases type should always be named 'aliases' to avoid confusion. It always sets the value of 'aliases', no matter the internal name.",
            "none": {"type": "none", "display_text": ":)"},
            "aliases": {"type": "aliases", "display_text":"Aliases:"},
            "some_text": {"type": "text", "display_text":"Cool Text:", "default_text":"first text"},
            "#some_number": {"type": "number", "display_text":"More Text:", "default_text":"second text"},
            "combined_text": {"type": "none", "display_text": "!combined_text_variable"},

            "L_textList": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, "header_width": 50, "header_height": 25,
                "item": {"type": "text", "#display_text": "there is no display text! L! Don't have one here, or else stuff will break."}, 
                "axis_row": {"axis_type": "none", "size_default": 3, "size_range": "2.."},
                "axis_column": {"axis_type": "none", "size_range": "2"}
            },

            "#L_text1DList": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, 
                "item": {"type": "text"}, 
                "axis_row": {"axis_type": "none", "size_default": 1, "size_range": "1"}, 
                "axis_column": {"axis_type": "number", "size_default": 3, "size_range": "2..", "input_range": "..20"}
            },

            "#L_textListgrid": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, 
                "item": {"type": "text"}, 
                "axis_row": {"type": "number", "display_text":"Row", "integer": true, "input_range": "1..5"},
                "axis_column": {"type": "number", "display_text":"Col", "integer": true, "input_range": "3.."}
            },

            "#L_set_list": {"type": "list", "display_text":"Zombies:", 
                "item": {"type": "text", "display_text":"Zombie Typename:"}, 
                "axis_row": {"axis_type": "setvalue", "values": {"1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "Random": null}},
                "axis_column": {"axis_type": "none", "size_range": "5.."}
            },

            "#add_pf": {"type": "number", "display_text":"Additional PF: ", "integer": true, "input_range": "0.."},
            "#checkbox": {"type": "checkbox", "display_text": "yes or no", "default_bool": true, "true_value": true, "false_value": false},

            "#huge_text_type_using_reeditor_edit_custom_code_with_this!!!": {"type": "text_large", "display_text":"Cool Text:", "default_text":"first text"},
            "#": "ALSO make sure if I type \n or whatever in the code it doesn't show up as \\n. This is for everything not just reeditor edit"
        },
        "variables": {
            "#Automatic Variables": "default_aliases, wave_number[NOT ADDED, TO-DO], event_number",
            "#Note1": "You can reference other variables or inputs here. Variables will be updated until they stop changing (max 30 updates)",
            "#Note2": "No UI is shown, and the types are different and allow you to do more complicated stuff.",
            "#Note3": "You can add a quotation mark by specifying \" (a backslash before the quotation mark)",

            "aliases_rtid": {"type": "text_concatenate", "text_list": ["RTID(" ,"!aliases", "@CurrentLevel)"]},
            "combined_text_variable": {"type": "text_concatenate", "text_list": ["Combined:", "!some_text", "&", "!some_number"], "text_seperator": " "},

            "#offset_pf_plus": {"type": "number_offset", "number": "!add_pf", "offset": 1, "input_range": "0.."},
            "#offset_pf_minus": {"type": "number_offset", "number": "!add_pf", "offset": 1, "input_range": "0.."},
            "#checkbox_chooser": {"type": "checkbox_chooser", "checkbox": "!checkbox", "true_option": "!offset_pf_plus", "false_option": "!offset_pf_minus"},
            "#transposed_grid": {"type": "transpose", "list_to_transpose": "!L_textListgrid"},

            "#concatenate_list": {"type": "text_concatenate", "text_list": "!L_textList", "text_seperator": " "},

            "#some_way_to_modify_value_of_a_list": {}
        },
        "level_modules": ["!aliases"],
        "wave_modules": [{"Wave": "!wave_number", "RTID": "!aliases_rtid"}],
        "raw_code": [
            {
                "aliases": [
                    "!aliases"
                ],
                "objclass": "NonExistentProps2",
                "objdata": {
                    "AdditionalPlantfood": 3.1415,
                    "CombinedText": "!combined_text_variable",
                    "SomeText": "!some_text",
                    "#Note1": "By default, empty values are removed. Use !! if you don't want them to show up, even when empty.",
                    "#Note2": "In lists, !! applies to the current list layer.",
                    "#Note3": "Use !! for axis_row/axis_column if you want the whole row/column to show up as long as it has an item.",
                    "#Note4": "(If the list has no item, this is the default behaviour, and !! forces it to show up all the time.)",
                    "#Note5": "Use !! for item if you want everything to show up.",

                    "SomeUnremovableText": "!!some_text",

                    "#1": "Just a list of items",
                    "UnnamedlistOfThings": [
                        "!L_textList{item}"
                    ],

                    "#1.1": "1D list of items",
                    "Unnamed1DlistOfThings": [
                        "!L_text1DList{item}",
                        "!L_text1DList{axis_column}"
                    ],


                    "#2": "A list of objects that contains item",
                    "NamedlistOfThings": [
                        {
                            "Item": "!L_textList{item}"
                        }
                    ],

                    "#3": "A list of objects that contains item, row and column",
                    "NamedlistOfMoreThings": [
                        {
                            "Item": "!L_textListgrid{item}",
                            "Row": "!L_textListgrid{axis_row}",
                            "Column": "!L_textListgrid{axis_column}"
                        }
                    ],

                    "#4": "A list of objects that contains row and list of items in that row",
                    "NamedlistOfRows": [
                        {
                            "Row": "!L_textListgrid{axis_row}",
                            "Items": [
                                "!L_textListgrid{item}"
                            ]
                        }
                    ],

                    "#5": "A list of objects that contains row and list of objects containing item and their column",
                    "NamedlistOfRowsOfObject": [
                        {
                            "Row": "!L_textListgrid{axis_row}",
                            "Items": [
                                {"Item": "!L_textListgrid{item}", "Column": "!L_textListgrid{axis_column}"}
                            ]
                        }
                    ],

                    "#6": "A list of list (2D list, where 1st layer is row and 2nd layer is column)",
                    "#6.1": "2D list is a special case, as all lists are directly stored like this",
                    "ListOfListOfItemAndCol": "!L_textListgrid"
                }
            }
        ]
    },
    "test_event2": {
        "enabled": true,
        "display_text": "Test Event 2",
        "icon": "misc_lock",
        "inputs": {
            "none": {"type": "none", "display_text": ":)"},
            "aliases": {"type": "aliases", "display_text":"Aliases:"},
            "#some_number": {"type": "number", "display_text":"More Text:", "default_text":"second text"},
            "#combined_text": {"type": "none", "display_text": "!combined_text_variable"},
            "huge_text": {"type": "code", "display_text":"Huge Text:", "default_text":"beig"},

            "L_textList": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, "header_width": 50, "header_height": 25,
                "item": {"type": "text", "#default_text": "nnn", "#display_text": "there is no display text! L! Don't have one here, or else stuff will break."}, 
                "axis_row": {"axis_type": "none", "size_range": "-3..", "size_default": "2"},
                "axis_column": {"axis_type": "none", "size_range": "..6", "size_default": 2}
            },

            "#L_text1DList": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, 
                "item": {"type": "text"}, 
                "axis_row": {"axis_type": "none", "size_range": "1", "size_default": "3"}, 
                "axis_column": {"axis_type": "none", "size_range": "2..", "input_range": ""}
            },

            "#L_textListgrid": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, 
                "item": {"type": "text"}, 
                "axis_row": {"type": "number", "display_text":"Row", "integer": true, "input_range": "1..5"},
                "axis_column": {"type": "number", "display_text":"Col", "integer": true, "input_range": "3.."}
            },

            "#add_pf": {"type": "number", "display_text":"Additional PF: ", "integer": true, "input_range": "0.."},
            "#checkbox": {"type": "checkbox", "display_text": "yes or no", "default_bool": true, "true_value": true, "false_value": false}
        },
        "variables": {
            "aliases_rtid": {"type": "text_concatenate", "text_list": ["RTID(" ,"!aliases", "@CurrentLevel)"]},
            "combined_text_variable": {"type": "text_concatenate", "text_list": ["Combined:", "!some_text", "&", "!some_number"], "text_seperator": " "},

            "#offset_pf_plus": {"type": "number_offset", "number": "!add_pf", "offset": 1, "input_range": "0.."},
            "#offset_pf_minus": {"type": "number_offset", "number": "!add_pf", "offset": 1, "input_range": "0.."},
            "#checkbox_chooser": {"type": "checkbox_chooser", "checkbox": "!checkbox", "true_option": "!offset_pf_plus", "false_option": "!offset_pf_minus"},
            "#transposed_grid": {"type": "transpose", "list_to_transpose": "!L_textListgrid"},

            "#concatenate_list": {"type": "text_concatenate", "text_list": "!L_textList", "text_seperator": " "},

            "#some_way_to_modify_value_of_a_list": {}
        },
        "level_modules": ["!aliases"],
        "wave_modules": [{"Wave": "!wave_number", "RTID": "!aliases_rtid"}],
        "raw_code": [
            {
                "aliases": [
                    "!aliases"
                ],
                "objclass": "NonExistentProps",
                "objdata": {
                    "beigtext": "!huge_text",
                    "NamedlistOfRows": "!!L_textList"
                }
            }
        ]
    },
    "test_event3": {
        "enabled": true,
        "display_text": "Test Event 3",
        "icon": "misc_lockgold",
        "inputs": {
            "a": {"type": "text", "display_text":"default text", "default_text":"def"},
            "some_text": {"type": "text", "display_text":"Some Text:", "default_text":"first text"},

            "L_textList": {"type": "list", "display_text":"Some List:", "cell_width": 100, "cell_height": 25, "header_width": 50, "header_height": 25,
                "item": {"type": "text", "#default_text": "nnn", "#display_text": "there is no display text! L! Don't have one here, or else stuff will break."}, 
                "axis_row": {"axis_type": "none", "size_range": "2.."},
                "axis_column": {"axis_type": "none", "size_range": "2"}
            }
        },
        "variables": {},
        "level_modules": ["!aliases"],
        "wave_modules": [{"Wave": "!wave_number", "RTID": "!aliases_rtid"}],
        "raw_code": [
            {"aliases":["!aliases"],
            "objclass": "SpawnZombiesJitteredWaveActionProps",
            "objdata":{
                "AdditionalPlantfood": "!some_text",
                "Zombies": [
                    {"Row": "!L_textList{axis_row}", "Type": "!L_textList{item}"}
                ]
            }}
        ]
    },
    "custom_code": {
        "enabled": true,
        "display_text": "Custom Code",
        "icon": "misc_star",
        "inputs": {
            "#L_level_modules": {"type": "list", "display_text":"Level Modules:",
                "item": {"type": "code"}, 
                "axis_row": {"axis_type": "none", "size_range": "2.."},
                "axis_column": {"axis_type": "none", "size_range": "2"}
            },
            "#L_wave_modules": {"type": "list", "display_text":"Wave Modules:", 
                "item": {"type": "text", "display_text":"Module"}, 
                "axis_row": {"axis_type": "specifyvalue", "values": 
                    {"type": "number", "display_text":"Wave", "integer": true, "input_range": "1.."}
                },
                "axis_column": {"axis_type": "none", "size_range": "2"}
            },
            "L_raw_code": {"type": "list", "display_text":"Raw Code", 
                "item": {"type": "code", "default_text": {"default_key": "default_value"}}, 
                "axis_row": {"axis_type": "none", "size_range": "1..", "default_size": 3},
                "axis_column": {"axis_type": "none", "size_range": "1..", "default_size": 1}
            }
        },
        "level_modules": ["!L_level_modules{Row: !axis_row, Type: !item}"],
        "wave_modules": [{"Wave": "!wave_number", "RTID": "!aliases"}],
        "raw_code": ["!L_raw_code{item}"]
    },
    "empty": {
        "enabled": false,
        "display_text": "No Event",
        "icon": "misc_skull",
        "inputs": {
            "nothing": {"type": "none", "display_text":"!select_module_message"}
        },
        "level_modules": null,
        "wave_modules": null,
        "raw_code": null
    }
}